import matplotlib.pyplot as plt
import numpy as np
#from simplegraphlib import newcoord
#import math




mean_arr = np.array([[2.6, 0.95, 2.05, 2.0, 2.05, 2.55, 2.85, 3.0, 3.1, 2.95, 2.9, 2.7, 1.4500000000000002, 1.75, 1.6, 1.65, 2.65, 3.2, 3.4000000000000004, 3.95, 4.0, 4.1, 4.0, 2.9, 3.0, 1.9500000000000002, 3.0999999999999996, 4.449999999999999, 5.0, 4.75, 4.45, 4.949999999999999, 5.45, 4.85, 4.1, 2.95, 2.46, 2.26, 2.7800000000000002, 3.0250000000000004, 2.81, 2.605, 2.375, 2.71, 3.9400000000000004, 3.715, 3.16, 3.4299999999999997, 3.045, 2.445, 2.21, 1.9100000000000001, 1.525, 0.975, 1.2200000000000002, 1.5350000000000001, 1.685, 1.75, 1.78, 2.005, 1.51, 1.09, 1.0, 1.155, 1.7999999999999998, 3.065, 3.65, 3.665, 3.4000000000000004, 3.2300000000000004, 2.88, 2.07, 1.69, 1.445, 1.065, 1.13, 1.72, 2.7350000000000003, 3.9899999999999998, 4.8100000000000005, 4.6899999999999995, 3.6, 2.55, 2.225], [5.4, 2.45, 3.65, 3.8, 4.65, 6.5, 7.4, 7.85, 7.9, 7.3, 6.050000000000001, 5.5, 3.3499999999999996, 2.85, 3.5, 3.15, 5.9, 7.449999999999999, 8.2, 9.149999999999999, 9.2, 8.85, 8.6, 5.65, 5.65, 4.15, 5.35, 8.0, 9.55, 9.850000000000001, 10.100000000000001, 10.95, 11.6, 11.15, 9.0, 7.15, 5.800000000000001, 5.0, 6.15, 6.75, 7.2, 6.449999999999999, 5.45, 6.1, 8.5, 8.35, 7.55, 7.45, 6.8, 6.0, 5.2, 4.65, 4.25, 4.05, 4.05, 4.15, 4.45, 4.199999999999999, 4.0, 4.4, 3.5999999999999996, 2.6, 2.1, 2.8, 4.75, 7.6, 8.350000000000001, 8.5, 8.5, 7.9, 6.699999999999999, 4.4, 3.6, 3.2, 2.5, 3.15, 4.55, 6.75, 9.05, 10.7, 10.4, 7.949999999999999, 5.5, 5.0], [159.0, 133.0, 92.0, 124.5, 155.5, 164.5, 142.0, 89.0, 86.0, 108.0, 123.5, 120.0, 99.0, 56.0, 71.0, 33.5, 43.5, 50.0, 59.5, 78.0, 86.0, 80.0, 79.5, 56.0, 47.0, 337.5, 342.0, 352.5, 4.0, 19.5, 40.5, 61.5, 68.5, 97.0, 119.0, 39.0, 29.5, 25.0, 21.5, 16.0, 35.5, 49.0, 65.5, 52.5, 61.0, 66.5, 65.0, 53.5, 46.0, 41.0, 37.5, 45.0, 63.0, 96.0, 125.0, 138.5, 162.5, 167.0, 170.5, 184.5, 175.5, 146.0, 127.0, 145.0, 127.0, 121.5, 136.5, 145.0, 147.0, 145.0, 141.5, 143.0, 145.5, 146.0, 131.0, 134.5, 144.0, 149.0, 156.0, 163.5, 169.0, 163.5, 154.5, 165.5]])
deg = [310.0, 133.0, 92.0, 124.5, 155.5, 164.5, 142.0, 89.0, 86.0, 108.0, 123.5, 120.0, 99.0, 56.0, 71.0, 33.5, 43.5, 50.0, 59.5, 78.0, 86.0, 80.0, 79.5, 56.0, 47.0, 337.5, 342.0, 352.5, 4.0, 19.5, 40.5, 61.5, 68.5, 97.0, 119.0, 39.0, 29.5, 25.0, 21.5, 16.0, 35.5, 49.0, 65.5, 52.5, 61.0, 66.5, 65.0, 53.5, 46.0, 41.0, 37.5, 45.0, 63.0, 96.0, 125.0, 138.5, 162.5, 167.0, 170.5, 184.5, 175.5, 146.0, 127.0, 145.0, 127.0, 121.5, 136.5, 145.0, 147.0, 145.0, 141.5, 143.0, 145.5, 146.0, 131.0, 134.5, 144.0, 149.0, 156.0, 163.5, 169.0, 163.5, 154.5, 165.5]
# mean_arr[2]
normal = mean_arr[0]
byar = mean_arr[1]


x_arr = np.array(['15/0-1', '15/2-3', '15/4-5', '15/6-7', '15/8-9', '15/10-11', '15/12-13', '15/14-15', '15/16-17', '15/18-19', '15/20-21', '15/22-23', '16/0-1', '16/2-3', '16/4-5', '16/6-7', '16/8-9', '16/10-11', '16/12-13', '16/14-15', '16/16-17', '16/18-19', '16/20-21', '16/22-23', '17/0-1', '17/2-3', '17/4-5', '17/6-7', '17/8-9', '17/10-11', '17/12-13', '17/14-15', '17/16-17', '17/18-19', '17/20-21', '17/22-23', '18/0-1', '18/2-3', '18/4-5', '18/6-7', '18/8-9', '18/10-11', '18/12-13', '18/14-15', '18/16-17', '18/18-19', '18/20-21', '18/22-23', '19/0-1', '19/2-3', '19/4-5', '19/6-7', '19/8-9', '19/10-11', '19/12-13', '19/14-15', '19/16-17', '19/18-19', '19/20-21', '19/22-23', '20/0-1', '20/2-3', '20/4-5', '20/6-7', '20/8-9', '20/10-11', '20/12-13', '20/14-15', '20/16-17', '20/18-19', '20/20-21', '20/22-23', '21/0-1', '21/2-3', '21/4-5', '21/6-7', '21/8-9', '21/10-11', '21/12-13', '21/14-15', '21/16-17', '21/18-19', '21/20-21', '21/22-23'])
#print(x_arr)
direction_def: list = ["N", "O", "S", "W"]
direction_str_list: list = []
for i, el in enumerate(deg):
  direction_num_list: list = []
  

  print(f"\n\nd:{el}")
  for extent in range(4):
    # print(extent*90, (extent+1)*90)
    if (extent*90<=el<=(extent+1)*90):
      if (extent*90<=el<(extent+1)*90-60):
        direction_num_list.append(extent)
      elif (extent*90+30<=el<=(extent+1)*90-30):
        direction_num_list.append(extent)
        added_extent = extent+1
        if added_extent == 4: added_extent=0
        direction_num_list.append(added_extent)
      elif (extent*90+60<=el<=(extent+1)*90):
        added_extent = extent+1
        if added_extent == 4: added_extent=0
        direction_num_list.append(added_extent)
      #print(direction_num_list)
      
      #print(direction_num_list)
      if 0 in direction_num_list:
        #print(direction_num_list.index(0))
        direction_num_list.insert(0,direction_num_list.pop((direction_num_list.index(0))))
        #print(direction_num_list)
      elif 2 in direction_num_list:
        #print(direction_num_list.index(2))
        direction_num_list.insert(0,direction_num_list.pop((direction_num_list.index(2))))
        #print(direction_num_list)
      to_str = "".join((np.array(direction_def)[direction_num_list]).tolist())
      direction_str_list.append(to_str)
      print(el, direction_str_list[-1])
del direction_def


fig, axs = plt.subplots(figsize=(20, 10), dpi=50)
axs.plot(x_arr, normal)
axs.plot(x_arr, byar)
axs.fill_between(x_arr, normal, byar, color='gray', alpha=0.25)
axs2 = axs.secondary_xaxis("bottom")
axs2.tick_params(axis='x', which='both', pad=20)
axs2.set_xticks(np.arange(len(direction_str_list)))
axs2.set_xticklabels(direction_str_list)

plt.show()